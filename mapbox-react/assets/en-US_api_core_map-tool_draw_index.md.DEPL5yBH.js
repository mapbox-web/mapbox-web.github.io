import{_ as i,c as e,j as s,a,ag as n,o as l}from"./chunks/framework.BRsuZZrq.js";const y=JSON.parse('{"title":"DrawControl","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/api/core/map-tool/draw/index.md","filePath":"en-US/api/core/map-tool/draw/index.md"}'),h={name:"en-US/api/core/map-tool/draw/index.md"};function r(p,t,d,k,o,E){return l(),e("div",null,t[0]||(t[0]=[s("h1",{id:"drawcontrol",tabindex:"-1"},[a("DrawControl "),s("a",{class:"header-anchor",href:"#drawcontrol","aria-label":'Permalink to "DrawControl"'},"​")],-1),s("h2",{id:"example",tabindex:"-1"},[a("Example "),s("a",{class:"header-anchor",href:"#example","aria-label":'Permalink to "Example"'},"​")],-1),s("iframe",{height:"400",style:{width:"100%"},scrolling:"no",title:"Draw Control Demo",src:"https://codepen.io/bitjjj/full/ogvmomW?default-tab=js%2Cresult&editable=true",frameborder:"no",loading:"lazy",allowtransparency:"true",allowfullscreen:"true"},null,-1),n(`<details class="details custom-block"><summary>Example Source Code</summary><div class="language-tsx vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> React, { useState } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ReactDOM </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;react-dom&#39;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { MbDrawControl, MbMap, MbTiandituLayer } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;@mapbox-react/core&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">mapCenter</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">116.38745</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">39.91266</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">])</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  const</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">zoom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">setZoom</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> useState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> className</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;map-wrapper&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MbMap</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> center</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{mapCenter} </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">zoom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{zoom}&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MbTiandituLayer</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> types</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{[</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;vec&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]} /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        &lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MbDrawControl</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> position</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;top-right&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MbMap</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ReactDOM.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">render</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(&lt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">App</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;, document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">querySelector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;#root&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">))</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br></div></div></details><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h2 id="props" tabindex="-1">PROPS <a class="header-anchor" href="#props" aria-label="Permalink to &quot;PROPS&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Type</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td>functions</td><td style="text-align:left;">Functions</td><td style="text-align:left;">array（&quot;point&quot;, &quot;polyline&quot;, &quot;polygon&quot;, &quot;trash&quot;）</td><td style="text-align:left;">[&quot;point&quot;, &quot;polyline&quot;, &quot;polygon&quot;, &quot;trash&quot;]</td></tr><tr><td>position</td><td style="text-align:left;">Position</td><td style="text-align:left;">string(&#39;top-left&#39; ， &#39;top-right&#39; ， &#39;bottom-left&#39; ，&#39;bottom-right&#39;)</td><td style="text-align:left;">top-right</td></tr></tbody></table><h2 id="events" tabindex="-1">EVENTS <a class="header-anchor" href="#events" aria-label="Permalink to &quot;EVENTS&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Parameters</th></tr></thead><tbody><tr><td>onCreated</td><td style="text-align:left;">Map initialization completed event</td><td style="text-align:left;">-</td></tr><tr><td>onDrawCreated</td><td style="text-align:left;">Drawing completed event</td><td style="text-align:left;">features: AnyArr</td></tr><tr><td>onDrawDelete</td><td style="text-align:left;">Delete element(s) event</td><td style="text-align:left;">features: AnyArr</td></tr><tr><td>onDrawUpdate</td><td style="text-align:left;">Drawing element(s) updated event</td><td style="text-align:left;">object — Contains <code>action</code> property and <code>features</code></td></tr></tbody></table><h2 id="methods" tabindex="-1">METHODS <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;METHODS&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Name</th><th style="text-align:left;">Description</th><th style="text-align:left;">Definition</th></tr></thead><tbody><tr><td>add</td><td style="text-align:left;">Returns: Array — featureIds</td><td style="text-align:left;">geojson: object — geojson</td></tr><tr><td>get</td><td style="text-align:left;">Returns: object — feature geojson</td><td style="text-align:left;">featureId: string</td></tr><tr><td>getSelectedIds</td><td style="text-align:left;">Gets the IDs of the currently selected features</td><td style="text-align:left;">() =&gt; string[]</td></tr><tr><td>getSelected</td><td style="text-align:left;">Gets the currently selected features in GeoJSON format (as a FeatureCollection)</td><td style="text-align:left;">() =&gt; object — featureCollection</td></tr><tr><td>getAll</td><td style="text-align:left;">Gets all drawn features in GeoJSON format (as a FeatureCollection)</td><td style="text-align:left;">() =&gt; object — geojson featureCollection</td></tr><tr><td>delete</td><td style="text-align:left;">Deletes features based on their IDs</td><td style="text-align:left;">(ids: string[]) =&gt; void</td></tr><tr><td>deleteAll</td><td style="text-align:left;">Deletes all drawn features</td><td style="text-align:left;">() =&gt; void</td></tr></tbody></table>`,8)]))}const c=i(h,[["render",r]]);export{y as __pageData,c as default};
