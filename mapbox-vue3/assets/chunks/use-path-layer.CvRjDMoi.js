import{v as L,g as F}from"./v4.BCLFZokq.js";import{p as S}from"./csscolorparser.A-VAnCRm.js";import{a7 as A,q as n,$ as N}from"./framework.BRu0xxKU.js";import{M as R,P as I}from"./path-layer.s0Kv9vne.js";const x={id:{type:String,default:()=>L()},data:{type:[Array,Object,Promise,String],default:""},show:{type:Boolean,default:!0},opacity:{type:Number,default:1},pickable:{type:Boolean,default:!1},autoHighlight:{type:Boolean,default:!1},highlightColor:{type:[String,Array],default:()=>[255,255,128,1]},highlightedObjectIndex:{type:Number,default:-1},onDataLoad:{type:Function},dataTransform:{type:Function},transitions:{type:Object,default:()=>{}}},O={click:a=>!0,mousemove:a=>!0,mouseleave:()=>!0},W={...x,width:{type:[Number,Function],default:1},sourcePosition:{type:[Array,Function],required:!0},targetPosition:{type:[Array,Function],required:!0},sourceColor:{type:[String,Function],default:"black"},targetColor:{type:[String,Function],default:"black"},height:{type:[Number,Function],default:1}},q=O;class p{constructor(i,o,r,t=1){this.r=i,this.g=o,this.b=r,this.a=t}static parse(i){if(i){if(i instanceof p)return i;if(Array.isArray(i))return new p(i[0],i[1],i[2],i[3]);if(typeof i=="string"){const o=S(i);return o?new p(...o):void 0}}}toArray(){const{r:i,g:o,b:r,a:t}=this;return t===0?[0,0,0,0]:[i,o,r,t]}toString(){const[i,o,r,t]=this.toArray();return`rgba(${Math.round(i)},${Math.round(o)},${Math.round(r)},${t})`}toArrayForDeck(){const{r:i,g:o,b:r,a:t}=this;return t===0?[0,0,0,0]:[i,o,r,t*255]}}function $(a,i){let o;const r=A().emit,t=()=>{const{id:e,data:l,show:s,opacity:d,pickable:g,autoHighlight:b,highlightedObjectIndex:w,highlightColor:C,onDataLoad:M,dataTransform:j,transitions:v}=a,k={id:e,data:l,visible:s,opacity:d,pickable:g,autoHighlight:b,highlightedObjectIndex:w,highlightColor:u(C),onDataLoad:M,dataTransform:j,transitions:v,onMouseover:c=>{c.object&&r("mousemove",{object:c.object,coordinates:y(c),pixel:c.pixel})},onMouseleave:()=>{r("mouseleave")},onClick:c=>{c.object&&r("click",{object:c.object,coordinates:y(c),pixel:c.pixel})}};o=i(k)},y=e=>{const l=h();if(l)return l.unproject(e.pixel)},m=e=>l=>{const s=e(l);return p.parse(s).toArrayForDeck()},u=e=>typeof e=="function"?m(e):p.parse(e).toArrayForDeck(),f=(e,l)=>{o&&o.setProps({[e]:u(l)})},P=()=>{t();const e=h(),{__deck:l}=e;if(e.addLayer(o),l)return;let s;o.deck.setProps({onHover:(d,g)=>{d.layer?(s&&s.id!==d.layer.id&&s.props.onMouseleave(),d.layer.props.onMouseover(d,g),s=d.layer):(s&&s.props.onMouseleave(),s=void 0)}})},{getMapboxInstance:h}=F(P);return n(()=>a.data,e=>{o&&o.setProps({data:e})}),n(()=>a.show,e=>{o&&o.setProps({visible:e})}),n(()=>a.opacity,e=>{o&&o.setProps({opacity:e})}),n(()=>a.pickable,e=>{o&&o.setProps({pickable:e})}),n(()=>a.autoHighlight,e=>{o&&o.setProps({autoHighlight:e})}),n(()=>a.highlightedObjectIndex,e=>{o&&o.setProps({highlightedObjectIndex:e})}),n(()=>a.highlightColor,e=>{f("highlightColor",e)}),N(()=>{const e=h();e&&e.style&&e.removeLayer(a.id)}),{getLayer:()=>o,parseColorVal:u,setColorProps:f}}const E={...x,widthUnits:{type:String,default:"meters"},widthScale:{type:Number,default:1},widthMinPixels:{type:Number,default:0},widthMaxPixels:{type:Number,default:Number.MAX_SAFE_INTEGER},capRounded:{type:Boolean,default:!1},jointRounded:{type:Boolean,default:!1},miterLimit:{type:Number,default:4},getPath:{type:Function,default:a=>a.path},getColor:{type:[String,Function,Array],default:"black"},getWidth:{type:[Number,Function],default:100}};function V(a){const i=y=>{const{widthUnits:m,widthScale:u,widthMinPixels:f,widthMaxPixels:P,capRounded:h,jointRounded:e,miterLimit:l,getPath:s,getWidth:d,getColor:g,pathType:b}=a;return new R(Object.assign({},y,{type:I,widthUnits:m,widthScale:u,widthMinPixels:f,widthMaxPixels:P,capRounded:h,jointRounded:e,miterLimit:l,getPath:s,getWidth:d,getColor:t(g),_pathType:b}))},{getLayer:o,setColorProps:r,parseColorVal:t}=$(a,i);B(a,{getLayer:o,setColorProps:r,parseColorVal:t})}function B(a,{getLayer:i,setColorProps:o}){n(()=>a.widthUnits,r=>{const t=i();t&&t.setProps({widthUnits:r})}),n(()=>a.widthScale,r=>{const t=i();t&&t.setProps({widthScale:r})}),n(()=>a.widthMinPixels,r=>{const t=i();t&&t.setProps({widthMinPixels:r})}),n(()=>a.widthMaxPixels,r=>{const t=i();t&&t.setProps({widthMaxPixels:r})}),n(()=>a.capRounded,r=>{const t=i();t&&t.setProps({capRounded:r})}),n(()=>a.jointRounded,r=>{const t=i();t&&t.setProps({jointRounded:r})}),n(()=>a.miterLimit,r=>{const t=i();t&&t.setProps({miterLimit:r})}),n(()=>a.getColor,r=>{o("getColor",r)}),n(()=>a.getWidth,r=>{const t=i();t&&t.setProps({getWidth:r})}),n(()=>a.getPath,r=>{const t=i();t&&t.setProps({getPath:r})})}export{B as C,$ as F,W as a,q as i,x as o,V as p,O as r,E as u};
