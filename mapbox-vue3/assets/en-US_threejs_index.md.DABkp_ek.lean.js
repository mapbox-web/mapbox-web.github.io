import{_ as t,c as i,a2 as a,o}from"./chunks/framework.BRu0xxKU.js";const c=JSON.parse('{"title":"Mapbox & ThreeJS Interaction Methods","description":"","frontmatter":{},"headers":[],"relativePath":"en-US/threejs/index.md","filePath":"en-US/threejs/index.md"}'),r={name:"en-US/threejs/index.md"};function l(s,e,n,d,h,m){return o(),i("div",null,e[0]||(e[0]=[a('<h1 id="mapbox-threejs-interaction-methods" tabindex="-1">Mapbox &amp; ThreeJS Interaction Methods <a class="header-anchor" href="#mapbox-threejs-interaction-methods" aria-label="Permalink to &quot;Mapbox &amp; ThreeJS Interaction Methods&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Due to differences in the perspective camera used by ThreeJS and the camera mechanism and coordinate systems used by Mapbox, objects rendered with ThreeJS may exhibit offset issues when dragging the map. The following three methods use different algorithms to synchronize the ThreeJS camera, resulting in varying degrees of offset depending on the map&#39;s tilt. — The above explanation is purely based on personal understanding.</p></div><p>There are three ways to use ThreeJS with Mapbox:</p><ol><li>Custom Mapbox custom layer, directly using ThreeJS, refer to the official example (<a href="https://docs.mapbox.com/mapbox-gl-js/example/add-3d-model/" target="_blank" rel="noreferrer">https://docs.mapbox.com/mapbox-gl-js/example/add-3d-model/</a>) <ul><li>Requires including the ThreeJS library.</li><li>Implemented directly using a custom layer, allowing full use of the ThreeJS API.</li><li>Only applicable to the EPSG:3857 coordinate system (Web Mercator).</li><li>Requires manual conversion of latitude and longitude to ThreeJS coordinates.</li></ul></li><li>Using Threebox, refer to the official example (<a href="https://docs.mapbox.com/mapbox-gl-js/example/add-3d-model-threebox/" target="_blank" rel="noreferrer">https://docs.mapbox.com/mapbox-gl-js/example/add-3d-model-threebox/</a>) <ul><li>Requires including the Threebox library. ThreeJS is already bundled within Threebox, limiting the flexibility to use different ThreeJS versions.</li><li>Simple and easy-to-use API.</li><li>Only applicable to the EPSG:3857 coordinate system.</li></ul></li><li>Using SuperMap iClient plugin <ul><li>Requires including the ThreeJS library.</li><li>Simple API.</li><li>Applicable to various coordinate systems.</li><li>Offset issues are very significant in non-EPSG:3857 coordinate systems.</li></ul></li></ol><h2 id="_3d-file-formats" tabindex="-1">3D File Formats <a class="header-anchor" href="#_3d-file-formats" aria-label="Permalink to &quot;3D File Formats&quot;">​</a></h2><p>Recommended: GLB and GLTF formats</p><ul><li>OBJ format</li><li>GLB or GLTF format</li><li>FBX format</li></ul>',7)]))}const u=t(r,[["render",l]]);export{c as __pageData,u as default};
